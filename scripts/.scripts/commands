#!/bin/bash
###############################################################################
##### SYSTEM UPDATE                                                     #######
###############################################################################
function update(){
    echo '-------------------------'
    echo '-------- UPDATE ---------'
    echo '-------------------------'

    if [[ $(lsb_release -is) == "Debian" || $(lsb_release -is) == "Ubuntu" ]]; then
        sudo apt update && sudo apt upgrade
    elif [[ $(lsb_release -is) == "Fedora" ]]; then
        sudo dnf5 update --refresh
    else
        echo "Unsupported distribution. Update command not available."
    fi
    echo ''

    echo '-------------------------'
    echo '-------- FLATPAK --------'
    echo '-------------------------'
    flatpak update -y
    
    echo ''
    __update-rust
    __update-neovim
}

###############################################################################
##### UPDATE MAJOR TOOLS                                                #######
###############################################################################
function __update-rust(){
    # Rust Update
    echo '-------------------------'
    echo '---------- RUST ---------'
    echo '-------------------------'
    rustup update
    curl -sS https://starship.rs/install.sh | sh -s -- -y -b ~/.local/bin > /dev/null
    echo ''
}

function __update-emscripten(){
    # # Emscripten update
    echo '-------------------------'
    echo '------ EMSCRIPTEN -------'
    echo '-------------------------'
    cd ~/Software/emsdk || exit
    pull=$(git pull)
    if [[ $pull != "Already up to date." ]];
    then
        ~/Software/emsdk/emsdk install latest
        ~/Software/emsdk/emsdk activate latest
    else
        echo "$pull"
    fi
    cd ~ || exit
    echo ''
}

function __update-espIdf(){
    # Esp-Idf
    echo '-------------------------'
    echo '-------- ESP-IDF --------'
    echo '-------------------------'
    cd ~/Software/esp-idf || exit
    pull=$(git pull)
    if [[ $pull != "Already up to date." ]];
    then
        git pull --recurse-submodules
        sh ~/Software/esp-idf/install.sh
    else
        echo "$pull"
    fi
    cd ~ || exit
    echo ''
}

function __update-neovim(){
    echo '-------------------------'
    echo '-------- NEOVIM ---------'
    echo '-------------------------'
    sudo curl -L https://github.com/neovim/neovim/releases/latest/download/nvim.appimage -o /usr/bin/nvim
    sudo chmod 755 /usr/bin/nvim
    echo ''
}

###############################################################################
####### BACKUP                                                           ######
###############################################################################
function tar-pack(){
    filename=$(basename "$1")
    tar --zstd -cvf "$filename".tar.zst "$1"
}

function tar-unpack(){
    tar --zstd -xvf "$1"
}

function backup-files() {
    shopt -s dotglob
    cd ~ || exit
    ## BRAVE
    tar-pack .var/app/com.brave.Browser/config/BraveSoftware
    tar-pack .dotfiles
    tar-pack Private
    tar-pack Work
    tar-pack Projects
    tar-pack .ssh
    tar-pack .gitconfig

    udisksctl mount --block-device /dev/sda1
    mv ~/*.tar.zst "/run/media/$USER/Backup/Linux/"
}
