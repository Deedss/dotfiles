#!/bin/bash
###############################################################################
##### SYSTEM UPDATE                                                     #######
###############################################################################
update() {
    echo '-------------------------'
    echo '-------- UPDATE ---------'
    echo '-------------------------'
    if [[ $(lsb_release -is) == "Debian" || $(lsb_release -is) == "Ubuntu" ]]; then
        sudo apt update && sudo apt upgrade
    elif [[ $(lsb_release -is) == "Fedora" ]]; then
        sudo dnf update --refresh
    fi
    echo ''

    echo '-------------------------'
    echo '-------- FLATPAK --------'
    echo '-------------------------'
    flatpak update -y
    echo ''

    __update-rust
    __update-neovim
}

###############################################################################
##### UPDATE MAJOR TOOLS                                                #######
###############################################################################
__update-rust() {
    # Rust Update
    echo '-------------------------'
    echo '---------- RUST ---------'
    echo '-------------------------'
    rustup update
    echo ''
}

__update-neovim() {
    echo '-------------------------'
    echo '-------- NEOVIM ---------'
    echo '-------------------------'
    local nvim_dir=~/Software/nvim
    local nvim_url="https://github.com/neovim/neovim/releases/latest/download/nvim-linux64.tar.gz"
    if [[ ! -d $nvim_dir ]]; then
        mkdir -p "$nvim_dir"
    else
        local local_nvim_version=$(nvim --version | head -n1 | cut -d ' ' -f 2)
        local latest_nvim_version=$(curl -sL https://api.github.com/repos/neovim/neovim/releases/latest | jq -r '.tag_name')
        if [[ "$local_nvim_version" == "$latest_nvim_version" ]]; then
            echo 'Already up to date.'
            echo ''
            return
        fi
    fi

    rm -rf "$nvim_dir"/*
    curl -LO "$nvim_url"
    tar -xzf nvim-linux64.tar.gz -C "$nvim_dir" --strip-components 1
    rm nvim-linux64.tar.gz
    echo ''
}
###############################################################################
####### BACKUP                                                           ######
###############################################################################
tar-pack() {
    local filename=$(basename "$1")
    tar --zstd -cvf "${filename}.tar.zst" "$1"
}

tar-unpack() {
    tar --zstd -xvf "$1"
}

backup-files() {
    cd ~ || exit

    # List of directories and files to back up
    local items=(
        ".var/app/com.brave.Browser/config/BraveSoftware/"
        ".dotfiles"
        "Private"
        "Work"
        "Projects"
        ".ssh"
        ".gitconfig"
    )

    for item in "${items[@]}"; do
        if [[ -e "$item" ]]; then
            tar-pack "$item"
        else
            echo "Skipping $item: does not exist."
        fi
    done
}
