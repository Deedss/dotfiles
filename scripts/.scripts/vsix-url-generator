#!/usr/bin/env python3

import argparse
import sys

def print_help(parser : argparse.ArgumentParser):
    """Print the help message and exit."""
    parser.print_help()
    sys.exit(1)

def select_platform():
    platforms = [
        "win32-x64", "win32-arm64", "linux-x64", "linux-arm64", "linux-armhf", 
        "alpine-x64", "alpine-arm64", "darwin-x64", "darwin-arm64", "web"
    ]
    
    print("Select a platform:")
    for i, platform in enumerate(platforms, start=1):
        print(f"{i}: {platform}")
    
    try:
        choice = int(input("Choose an option [1-10]: "))
        if 1 <= choice <= len(platforms):
            return platforms[choice - 1]
        else:
            print("Invalid choice", file=sys.stderr)
            sys.exit(2)
    except ValueError:
        print("Invalid input. Please enter a number between 1 and 10.", file=sys.stderr)
        sys.exit(2)

def main():
    parser = argparse.ArgumentParser(description="Generate a VSCode extension download URL")
    parser.add_argument("-i", "--identifier", help="The unique identifier of the extension (e.g., ms-python.python)")
    parser.add_argument("-v", "--version", help="The version of the package that you want")
    parser.add_argument("-t", "--target_platform", action="store_true", help="Trigger the target platform selection menu")
    
    args = parser.parse_args()
    
    # Print help if no arguments are provided
    if len(sys.argv) == 1:
        print_help(parser)
    
    if not args.identifier or not args.version:
        print("Error: Both --identifier and --version are required.", file=sys.stderr)
        print_help(parser)
    
    identifier = args.identifier
    version = args.version

    if '.' not in identifier:
        print("Error: Invalid identifier format. Expected format is publisher.package (e.g., ms-python.python).", file=sys.stderr)
        sys.exit(3)
    
    publisher, package = identifier.split('.', 1)

    if args.target_platform:
        target_platform = select_platform()
        final_url = f"https://marketplace.visualstudio.com/_apis/public/gallery/publishers/{publisher}/vsextensions/{package}/{version}/vspackage?targetPlatform={target_platform}"
    else:
        final_url = f"https://marketplace.visualstudio.com/_apis/public/gallery/publishers/{publisher}/vsextensions/{package}/{version}/vspackage"
    
    print(f"Generated URL: {final_url}")

if __name__ == "__main__":
    main()

