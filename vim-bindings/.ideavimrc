""" Map leader to space ---------------------
let mapleader=' '

""" Plugins  --------------------------------
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'machakann/vim-highlightedyank'
Plug 'terryma/vim-multiple-cursors'
" Plug 'easymotion/vim-easymotion'    " Requires extra plugins
Plug 'justinmk/vim-sneak'
Plug 'vim-scripts/argtextobj.vim'
Plug 'kana/vim-textobj-entire'
Plug 'vim-scripts/ReplaceWithRegister'

""" Plugin settings -------------------------
let g:argtextobj_pairs="[:],(:),<:>"

""" Idea specific settings ------------------
set ideajoin
set ideastatusicon=gray
set idearefactormode=keep

""" Generic VIM settings ------------------
set scrolloff=8             " # lines below/above cursor
set visualbell              " Use visual bell instead of beeping when doing something wrong
set ignorecase              " Use case insensitive search, except when using capital letters
set smartcase               " Use case insensitive search, except when using capital letters
st timeoutlen=400          " Timeout of key press
set whichwrap+=<,>,h,l,[,]  " left and right arrow keys, as well as h and l, to wrap when used at beginning or end of lines
set clipboard+=unnamedplus  " Use system clipboard

set hlsaarch                " Highlight searches (use <C-L> to temporarily turn off highlighting; see the mapping of <C-L> below)
set incsearch               " Incremental searches

set foldmethod=indent       " Set indentation and folding use za for fold/unfold and zR for unfold all
set autoindent              " Set autoindent

" insert spaces when tab is pressed "
set tabstop=4
set shiftwidth=4
set expandtab

""" Mappings ---------------------
" Don't use Ex mode, use Q for formatting.
map Q gq

" Move to begin/end of line
nmap L $
nmap H ^
vmap L $
vmap H ^

" Motion Bindings
" Move the selected text up and down
vmap J :m '>+1<CR>gv=gv
vmap K :m '<-2<CR>gv=gv

" Replace currently selected text with default register
" without yanking it
vnoremap <leader>p "_dP

" Yank to the system clipboard
nnoremap <leader>y "+y
vnoremap <leader>y "+y
nnoremap <leader>Y "+Y

" Map <C-L> (redraw screen) to also turn off search highlighting until the
" next search
nnoremap <C-L> :nohl<CR><C-L>

" Go to next/previous action marker
nmap ]d <Action>(GotoNextError)
nmap [d <Action>(GotoPreviousError)

" Telescope-like functionality with JetBrains actions
nmap <leader><leader> <Action>(RecentFiles)
nmap <leader>e <Action>(ShowProblems)
nmap <leader>sf <Action>(GotoFile)
nmap <leader>sg <Action>(FindInPath)
nmap <leader>sd <Action>(ShowErrorDescription)
nmap <leader>s. <Action>(RecentFiles)
nmap <leader>/ <Action>(Find)
nmap g/ <Action>(FindInPath)

" LSP-like functionality with JetBrains actions
nmap gd <Action>(GotoDeclaration)
nmap gr <Action>(ShowUsages)
nmap gI <Action>(GotoImplementation)
nmap gy <Action>(GotoTypeDeclaration)
nmap gD <Action>(GotoDeclaration)
nmap gs <Action>(FileStructurePopup)
nmap gS <Action>(GotoSymbol)
nmap cd <Action>(RenameElement)
nmap g. <Action>(ShowIntentionActions)
nmap <leader>fd <Action>(ReformatCode)
vmap <leader>fd <Action>(ReformatCode)
nmap K <Action>(QuickJavaDoc)

" Multi Cursor Selection
nmap gl <Action>(SelectNextOccurrence)
vmap gl <Action>(SelectNextOccurrence)
vmap gL <Action>(UnselectPreviousOccurrence)

" Treesitter
vmap [x <Action>(EditorSelectWord)
xmap [x <Action>(EditorSelectWord)
xmap ]x <Action>(EditorUnSelectWord)
nmap ]f <Action>(MethodDown)
nmap [f <Action>(MethodUp)
